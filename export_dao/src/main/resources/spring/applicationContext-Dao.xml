<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--只需要配置Spring整合Mybatis配置（Dao层配置）-->

    <!--1.读取db.properties文件-->
    <!--
        classpath:  -  只读取当前项目下的类路径(resources目录)下的文件
        classpath*:  -  可以当前项目及其依赖项目下的类路径(resources目录)下的文件
    -->
    <context:property-placeholder location="classpath:properties/db.properties"/>

    <!--2.创建数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${jdbc.url}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--3.创建SqlSessionFactory（使用SqlSessionFactoryBean）-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--mybatis的分页插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <!--插件拦截器的参数列表-->
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--4.配置Dao接口扫描-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.lsl.dao"/>
    </bean>
    <!--3，4步的配置目标: 由Spring来扫描Dao接口所在包，使用sqlSessionFactory创建Dao代理对象-->

</beans>